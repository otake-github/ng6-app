{
    log4js: {
        appenders: {
            access: {
                type: 'dateFile',
                filename: "logs/access.log",
                pattern: "_yyyy-MM-dd",
                backups: 10,
                layout: {
                  type: 'pattern',
                  pattern: '%d{ISO8601_WITH_TZ_OFFSET} %05p %c %m',
                },
            },
            error: {
                type: 'dateFile',
                filename: "logs/error.log",
                pattern: "_yyyy-MM-dd",
                backups: 10,
                layout: {
                  type: 'pattern',
                  pattern: '%d{ISO8601_WITH_TZ_OFFSET} %05p %c %m',
                },
            },
            system: {
                type: 'dateFile',
                filename: "logs/system.log",
                pattern: "_yyyy-MM-dd",
                backups: 10,
                layout: {
                  type: 'pattern',
                  pattern: '%d{ISO8601_WITH_TZ_OFFSET} %05p %c %m',
                },
            },
            console: {
                type: 'console',
                # layout: {
                #   type: 'pattern',
                #   pattern: '%d{ISO8601_WITH_TZ_OFFSET} %05p %c %m',
                # },
            },
            # stdout: {
            #   type: 'stdout',
            #     # layout: {
            #     #   type: 'pattern',
            #     #   pattern: '%d{ISO8601_WITH_TZ_OFFSET} %05p %c %m',
            #     # },
            # }
        },
        categories: {
            default: {
                appenders: [
                    'access'
                    ,'console'
                    # ,'stdout'
                ]
                ,level: 'TRACE'
            },
            access: {
                appenders: [
                    'access'
                    ,'console'
                    # ,'stdout'
                ]
                ,level: 'INFO'
            },
            system: {
                appenders: [
                    'system'
                    ,'console'
                    # ,'stdout'
                ]
                ,level: 'ALL'
            },
            error: {
                appenders: [
                    'error'
                    ,'console'
                    # ,'stdout'
                ]
                ,level: 'WARN'
            }
        }
    }
}
